<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
		       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		       xmlns:aop="http://www.springframework.org/schema/aop"
		       xmlns:context="http://www.springframework.org/schema/context"
		       xsi:schemaLocation="http://www.springframework.org/schema/beans 
		       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
		
		<!-- 开启注解 -->
        <context:annotation-config/>
		<!-- 自动扫描 -->
	    <bean id = "userService" class="com.ustb.ssjgl.login.service.impl.UserServiceImpl"></bean>
        
       <!-- 用户授权信息Cache -->  
   	 	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />  

	    <!-- 配置进行授权和认证的 Realm -->  
	    <bean id = "userRealm" class="com.ustb.ssjgl.login.UserRealm">
	    	<property name="cacheManager" ref="cacheManager" />
	    	<property name="credentialsMatcher">  
        		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">  
            <property name="hashAlgorithmName" value="MD5"></property>  
            <property name="hashIterations" value="1024"></property>
        </bean>  
    </property>  
	    </bean>
        <!-- 配置缓存管理器 -->  
<!-- 		<bean id="cacheManager" class="com.ustb.ssjgl.shiro.MemoryCacheManager">  
        </bean> -->
<!--         <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        指定 ehcache 的配置文件   
             <property name="cacheManagerConfigFile" value="classpath:spring/ehcache-shiro.xml"/>
        </bean> -->
        
        <!-- 配置 Shiro 的 SecurityManager Bean. -->  
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
             <property name="realm" ref="userRealm"/>
             <property name="cacheManager" ref="cacheManager"/>
       </bean>
       
       <!-- 启用shrio授权注解拦截方式 -->  
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
            <!-- 装配 securityManager -->  
            <property name="securityManager" ref="securityManager"/>  
            <!-- 配置登陆页面 -->  
            <property name="loginUrl" value="/login/login.jsp"/>  
            <!-- 登陆成功后的页面 -->  
            <property name="successUrl" value="/index.jsp"/>  
            <property name="unauthorizedUrl" value="/unauthorized.jsp"/>  
            <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->  
            <property name="filterChainDefinitions">  
                <value>  
	                    /index.jsp=anon
	                    /jmeditor.jsp=anon
	                    /register.jsp=anon
	                    /success.jsp=anon
	                    /fail.jsp=anon
	                    /user.jsp = roles[user]
	                    /admin.jsp = roles[admin]
	                    /logout = logout
	                    /test = anon
	                    /login = anon
	                    /register/* = anon
						/**/*.js = anon
						/**/*.css = anon
						/**/*.png = anon
						/**/*.jpg = anon
						/**/*.gif = anon
						/**/*.swf = anon
						/** = authc
                </value>  
            </property>  
        </bean>  
       
       <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->  
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        
        <!-- AOP式方法级权限检查 -->  
	    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  
	        depends-on="lifecycleBeanPostProcessor">  
	        <property name="proxyTargetClass" value="true" />  
	    </bean>  
	    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
	        <property name="securityManager" ref="securityManager" />  
	    </bean>  
        
</beans>